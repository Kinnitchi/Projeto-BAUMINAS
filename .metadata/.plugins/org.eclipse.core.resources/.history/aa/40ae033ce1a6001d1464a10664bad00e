$(document).ready(function () {

	if ($("#atividade").val() != "0") {

		if ($('#oldFluig').val() == "") {
			buscaHistorico($('#numeroFluig').val())
		} else {
			buscaHistorico($('#oldFluig').val())
		};

		changeCheckbox();

		const listaCampos = ["razaoSocial", "cnpj", "codigoCliente", "numeroWinner", "numEditEmp", "contratoAta", "numPedidoContrato", "vigenciaContratoIni", "vigenciaContratoFim", "ateZerarSaldo", "unidadeFaturamento", "unidadeOrigem", "produtoBauminas", "produtoAmbientaly", "codigoProduto", "qtdeLicitKg", "qtdeLicitTon", "qtdeLicitLitros", "qtdeLicitBaseSeca", "qtdeLicitM3", "qtdeTotalKg", "qtdeTotalTon", "qtdeTotalLitros", "qtdeTotalBaseSeca", "qtdeTotalM3", "precoFinalKg", "precoFinalTon", "precoFinalLitros", "precoFinalBaseSeca", "precoFinalM3", "condicaoPagamento", "prazoEntrega", "especificarDias", "tipoFrete", "valorFrete", "seRedespacho", "horarioRecebimento", "mangote", "tamanho", "bomba", "engate", "especPolegadas", "obsParaLogistica", "especificacaoProduto", "envioLaudosEspecificos", "demandaEquip", "especificarEquip", "obsLicitacoes", "obsAtendimentoClientes"];

		for (x = 0; x < listaCampos.length; x++) {


			// if (atv != 7) {
			verificarAlteracao(listaCampos[x], $("#" + listaCampos[x]).val())
			setTimeout(() => {
				$("#" + listaCampos[x]).blur();
			}, 1000);
			// }


			verificarAlteracao("_" + listaCampos[x], $("#_" + listaCampos[x]).val());
			setTimeout(() => {
				// $("#" + listaCampos[x]).blur();
				$("#_" + listaCampos[x]).blur();
			}, 1000);
		}
	}

	if ($('#atividade').val() == '7') {
		if (getformMode() == "VIEW") {
			var arr = $("form[name='form']").find("select[disabled='disabled']");
			for (let index = 0; index < arr.length; index++) {

				arr[index].nextElementSibling.nextElementSibling.value == "Mudou" ? arr[index].style = "border-color: #e3b420 !important; color: black" : "";

			}
		}
	}

	$('input[type="checkbox"]').on('change', function (e) {

		var id = $("#" + e.target.id);
		var idOriginal = $("#" + e.target.id + "valOri").val();

		if (id.is(':checked').toString() != idOriginal) {

			id.siblings()[1].value = "Mudou";
			id.siblings()[2].setAttribute('class', 'text-warning');
			id.parent().removeClass('custom-checkbox-primary').addClass('custom-checkbox-warning');

		} else {
			id.siblings()[1].value = "";
			id.siblings()[2].classList.remove('text-warning');
			id.parent().removeClass('custom-checkbox-warning').addClass('custom-checkbox-primary');

		}

	})



});


$(function () {

	if ($("#atividade").val() != "7") {
		carregarCalendar();
	}
	carregarDivsRetorno();

	if ($("#atividade").val() == "15") {
		$("#div_enviarAtivPara").show();
		$('#cmb_enviarAtividadePara').prop('selectedIndex', 0);
	}

	$('#numeroFluig').on('change', function () {

		// CÃ³digos verificando dataset
		var con1 = DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST);
		var con2 = DatasetFactory.createConstraint("numeroFluig", $("#numeroFluig").val(), $("#numeroFluig").val(), ConstraintType.MUST);
		var dsVerifi = DatasetFactory.getDataset("DSFormulariodeChecklist-Alteracao-VendasMercadoPublico", null, [con1, con2], null);
		var repetiu = false;

		$('#UltimaSolicitacao').html('');

		for (var l = 0; l < dsVerifi.values.length; l++) {

			var cos1 = DatasetFactory.createConstraint("processId", "AC_0008", "AC_0008", ConstraintType.MUST);
			var cos2 = DatasetFactory.createConstraint("status", 0, 0, ConstraintType.MUST);
			var cos3 = DatasetFactory.createConstraint("cardDocumentId", dsVerifi.values[l]["metadata#id"], dsVerifi.values[l]["metadata#id"], ConstraintType.MUST);
			var dsVerifica = DatasetFactory.getDataset("workflowProcess", null, [cos1, cos2, cos3], null);

			if (dsVerifica.values.length > 0) {

				// repetiu = true;
				break;

			}

		}

		let numprocess = $(this).val()

		if (!repetiu) {

			const ds2 = DatasetFactory.getDataset(
				'DSFormulariodeChecklist-Alteracao-VendasMercadoPublico',
				null,
				[
					DatasetFactory.createConstraint("solicitacao", numprocess, numprocess, ConstraintType.MUST),
					DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST)
				],
				null);

			if (ds2.values.length > 0) {

				const value = ds2.values[0];

				var control;
				var fluig;

				if (value.oldFluig == null || value.oldFluig == undefined || value.oldFluig == "") {
					fluig = value.numeroFluig;
					console.log("NUMERO FLUIG: " + value.numeroFluig + " - FLUIG: " + fluig + " - OLD FLUIG: " + value.oldFluig);
				} else {
					fluig = value.oldFluig;
					console.log("OLDFLUIG: " + value.oldFluig + " - NUMEROFLUIG: " + value.numeroFluig + " - FLUIG: " + fluig);
				}


				const dsValues = new Array();

				const alteracaoNumFluig = DatasetFactory.getDataset("DSFormulariodeChecklist-Alteracao-VendasMercadoPublico",
					["solicitacao"],
					[
						DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST),
						DatasetFactory.createConstraint("numeroFluig", fluig, fluig, ConstraintType.MUST)
					],
					null);

				const alteracaoOldFluig = DatasetFactory.getDataset("DSFormulariodeChecklist-Alteracao-VendasMercadoPublico",
					["solicitacao"],
					[
						DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST),
						DatasetFactory.createConstraint("oldFluig", fluig, fluig, ConstraintType.MUST)
					],
					null);

				for (let i = 0; i < alteracaoNumFluig.values.length; i++) dsValues.push(alteracaoNumFluig.values[i]);
				for (let i = 0; i < alteracaoOldFluig.values.length; i++) dsValues.push(alteracaoOldFluig.values[i]);

				console.log(dsValues)
				debugger;

				if (dsValues.length > 0) {
					if (dsValues.at(-1).solicitacao <= numprocess) {
						control = true;
					} else {
						control = false;
					}
				}


				if (control) {

					if (ds2.values.length > 0) {

						$("#razaoSocial, #razaoSocialOriginal").val(value.razaoSocial);
						$("#cnpj, #cnpjOriginal").val(value.cnpj);
						$("#codigoCliente, #codigoCliente").val(value.codigoCliente);
						$("#numeroWinner, #numeroWinnerOriginal").val(value.numeroWinner);
						$("#numEditEmp, #numEditEmpOriginal").val(value.numEditEmp);
						$("#contratoAta, #contratoAtaOriginal").val(value.contratoAta);
						$("#numPedidoContrato, #numPedidoContratoOriginal").val(value.numPedidoContrato);
						$("#aditivo, #aditivoOriginal").val(value.aditivo);
						$("#vigenciaContratoIni, #vigenciaContratoIniOriginal").val(value.vigenciaContratoIni);
						$("#vigenciaContratoFim, #vigenciaContratoFimOriginal").val(value.vigenciaContratoFim);
						$("#ateZerarSaldo, #ateZerarSaldoOriginal").val(value.ateZerarSaldo);
						$("#unidadeFaturamento, #unidadeFaturamentoOriginal").val(value.unidadeFaturamento);
						$("#unidadeOrigem, #unidadeOrigemOriginal").val(value.unidadeOrigem);
						$("#produtoBauminas, #produtoBauminasOriginal").val(value.produtoBauminas);
						$("#produtoAmbientaly, #produtoAmbientalyOriginal").val(value.produtoAmbientaly);
						$("#codigoProduto, #codigoProdutoOriginal").val(value.codigoProduto);
						$("#qtdeLicitKg, #qtdeLicitKgOriginal").val(value.qtdeLicitKg);
						$("#qtdeLicitTon, #qtdeLicitTonOriginal").val(value.qtdeLicitTon);
						$("#qtdeLicitLitros, #qtdeLicitLitrosOriginal").val(value.qtdeLicitLitros);
						$("#qtdeLicitBaseSeca, #qtdeLicitBaseSecaOriginal").val(value.qtdeLicitBaseSeca);
						$("#qtdeLicitM3, #qtdeLicitM3Original").val(value.qtdeLicitM3);
						$("#qtdeTotalKg, #qtdeTotalKgOriginal").val(value.qtdeTotalKg);
						$("#qtdeTotalTon, #qtdeTotalTonOriginal").val(value.qtdeTotalTon);
						$("#qtdeTotalLitros, #qtdeTotalLitrosOriginal").val(value.qtdeTotalLitros);
						$("#qtdeTotalBaseSeca, #qtdeTotalBaseSecaOriginal").val(value.qtdeTotalBaseSeca);
						$("#qtdeTotalM3, #qtdeTotalM3Original").val(value.qtdeTotalM3);
						$("#precoFinalKg, #precoFinalKgOriginal").val(value.precoFinalKg);
						$("#precoFinalTon, #precoFinalTonOriginal").val(value.precoFinalTon);
						$("#precoFinalLitros, #precoFinalLitrosOriginal").val(value.precoFinalLitros);
						$("#precoFinalBaseSeca, #precoFinalBaseSecaOriginal").val(value.precoFinalBaseSeca);
						$("#precoFinalM3, #precoFinalM3Original").val(value.precoFinalM3);
						$("#condicaoPagamento, #condicaoPagamentoOriginal").val(value.condicaoPagamento);
						$("#prazoEntrega, #prazoEntregaOriginal").val(value.prazoEntrega);
						$("#especificarDias, #especificarDiasOriginal").val(value.especificarDias);
						$("#tipoFrete, #tipoFreteOriginal").val(value.tipoFrete);
						$("#valorFrete, #valorFreteOriginal").val(value.valorFrete);
						$("#seRedespacho, #seRedespachoOriginal").val(value.seRedespacho);

						value.tipoEntrega1 ? $("#tipoEntrega1").prop("checked", true) : $("#tipoEntrega1").prop("checked", false);
						value.tipoEntrega2 ? $("#tipoEntrega2").prop("checked", true) : $("#tipoEntrega2").prop("checked", false);
						value.tipoEntrega3 ? $("#tipoEntrega3").prop("checked", true) : $("#tipoEntrega3").prop("checked", false);
						value.tipoEntrega4 ? $("#tipoEntrega4").prop("checked", true) : $("#tipoEntrega4").prop("checked", false);
						value.tipoEntrega5 ? $("#tipoEntrega5").prop("checked", true) : $("#tipoEntrega5").prop("checked", false);
						value.tipoEntrega6 ? $("#tipoEntrega6").prop("checked", true) : $("#tipoEntrega6").prop("checked", false);
						value.tipoEntrega7 ? $("#tipoEntrega7").prop("checked", true) : $("#tipoEntrega7").prop("checked", false);
						value.tipoEntrega8 ? $("#tipoEntrega8").prop("checked", true) : $("#tipoEntrega8").prop("checked", false);
						value.tipoEntrega9 ? $("#tipoEntrega9").prop("checked", true) : $("#tipoEntrega9").prop("checked", false);
						value.tipoEntrega10 ? $("#tipoEntrega10").prop("checked", true) : $("#tipoEntrega10").prop("checked", false);
						value.tipoEntrega11 ? $("#tipoEntrega11").prop("checked", true) : $("#tipoEntrega11").prop("checked", false);
						value.tipoEntrega12 ? $("#tipoEntrega12").prop("checked", true) : $("#tipoEntrega12").prop("checked", false);
						value.tipoEntrega13 ? $("#tipoEntrega13").prop("checked", true) : $("#tipoEntrega13").prop("checked", false);
						value.tipoEntrega14 ? $("#tipoEntrega14").prop("checked", true) : $("#tipoEntrega14").prop("checked", false);
						value.tipoEntrega15 ? $("#tipoEntrega15").prop("checked", true) : $("#tipoEntrega15").prop("checked", false);
						value.tipoEntrega16 ? $("#tipoEntrega16").prop("checked", true) : $("#tipoEntrega16").prop("checked", false);
						value.tipoEntrega17 ? $("#tipoEntrega17").prop("checked", true) : $("#tipoEntrega17").prop("checked", false);
						value.tipoEntrega18 ? $("#tipoEntrega18").prop("checked", true) : $("#tipoEntrega18").prop("checked", false);
						value.tipoEntrega19 ? $("#tipoEntrega19").prop("checked", true) : $("#tipoEntrega19").prop("checked", false);
						value.tipoEntrega20 ? $("#tipoEntrega20").prop("checked", true) : $("#tipoEntrega20").prop("checked", false);
						value.optPaletizado ? $("#optPaletizado").prop("checked", true) : $("#optPaletizado").prop("checked", false);
						value.optFilmado ? $("#optFilmado").prop("checked", true) : $("#optFilmado").prop("checked", false);
						value.optCargaBatida ? $("#optCargaBatida").prop("checked", true) : $("#optCargaBatida").prop("checked", false);
						value.optDemandaAjudante ? $("#optDemandaAjudante").prop("checked", true) : $("#optDemandaAjudante").prop("checked", false);
						value.optExigeLogReversa ? $("#optExigeLogReversa").prop("checked", true) : $("#optExigeLogReversa").prop("checked", false);
						value.optDemandaContratEmpilh ? $("#optDemandaContratEmpilh").prop("checked", true) : $("#optDemandaContratEmpilh").prop("checked", false);

						$("#horarioRecebimento, #horarioRecebimentoOriginal").val(value.horarioRecebimento);
						$("#mangote, #mangoteOriginal").val(value.mangote);
						$("#tamanho, #tamanhoOriginal").val(value.tamanho);
						$("#bomba, #bombaOriginal").val(value.bomba);
						$("#engate, #engateOriginal").val(value.engate);
						$("#especPolegadas, #especPolegadasOriginal").val(value.especPolegadas);
						$("#obsParaLogistica, #obsParaLogisticaOriginal").val(value.obsParaLogistica);
						$("#especificacaoProduto, #especificacaoProdutoOriginal").val(value.especificacaoProduto);
						$("#envioLaudosEspecificos, #envioLaudosEspecificosOriginal").val(value.envioLaudosEspecificos);
						$("#demandaEquip, #demandaEquipOriginal").val(value.demandaEquip);
						$("#especificarEquip, #especificarEquipOriginal").val(value.especificarEquip);
						$("#informacoes, #informacoesOriginal").val(value.informacoes);
						$("#obsLicitacoes, #obsLicitacoesOriginal").val(value.obsLicitacoes);
						$("#obsAtendimentoClientes, #obsAtendimentoClientesOriginal").val(value.obsAtendimentoClientes);

						$("#oldFluig").val(value.numeroFluig);

						if ($('#oldFluig').val() != null || $('#oldFluig').val() != undefined || $('#oldFluig').val() != '') {

							buscaHistorico(fluig);

						} else {

							buscaHistorico(value.numeroFluig);

						};

					}

				} else {

					buscaHistorico(value.numeroFluig);
					resetValues();

					FLUIGC.toast({
						title: 'AtenÃ§Ã£o!',
						message: 'JÃ¡ existe uma solicitaÃ§Ã£o em aberto para este nÃºmero de pedido',
						type: 'info'
					});

					$('#UltimaSolicitacao').html('Ultima solicitaÃ§Ã£o: <a href="' + parent.WCMAPI.tenantURL + '/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=' + dsValues.at(-1).solicitacao + '" target="_blank" rel="noopener noreferrer "><strong class="text-info">' + dsValues.at(-1).solicitacao + '<strong></a>');


				}

			} else {

				let c3 = DatasetFactory.createConstraint("solicitacao", numprocess, numprocess, ConstraintType.MUST);
				let c4 = DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST);
				let ds = DatasetFactory.getDataset("ds_form_vendas_mercado_publico", null, [c3, c4], null);

				if (ds.values.length > 0) {

					$("#razaoSocial, #razaoSocialOriginal").val(ds.values[0].TXT_Cliente);
					$("#cnpj, #cnpjOriginal").val(ds.values[0].TXT_CNPJ);
					$("#codigoCliente, #codigoClienteOriginal").val(ds.values[0].TXT_CodCliente);
					$("#numeroWinner, #numeroWinnerOriginal").val(ds.values[0].txt_numWinner);
					$("#numEditEmp, #numEditEmpOriginal").val(ds.values[0].TXT_EditEmpenho);
					$("#contratoAta, #contratoAtaOriginal").val(ds.values[0].TXT_ContratoAta);
					$("#numPedidoContrato, #numPedidoContratoOriginal").val(ds.values[0].TXT_PedContr);
					$("#vigenciaContratoIni, #vigenciaContratoIniOriginal").val(ds.values[0].DT_ContratoDe);
					$("#vigenciaContratoFim, #vigenciaContratoFimOriginal").val(ds.values[0].DT_ContratoAte);
					$("#ateZerarSaldo, #ateZerarSaldoOriginal").val(ds.values[0].Rd_ZerarSd);
					$("#unidadeFaturamento, #unidadeFaturamentoOriginal").val(ds.values[0].CMB_UnidFaturam);
					$("#unidadeOrigem, #unidadeOrigemOriginal").val(ds.values[0].CMB_UnidOrigem);
					$("#produtoBauminas, #produtoBauminasOriginal").val(ds.values[0].CMB_Produto);
					$("#produtoAmbientaly, #produtoAmbientalyOriginal").val(ds.values[0].txt_ProdAmb);
					$("#codigoProduto, #codigoProdutoOriginal").val(ds.values[0].TXT_CodProd);
					$("#qtdeLicitKg, #qtdeLicitKgOriginal").val(ds.values[0].qtdeLicitKg);
					$("#qtdeLicitTon, #qtdeLicitTonOriginal").val(ds.values[0].qtdeLicitTon);
					$("#qtdeLicitLitros, #qtdeLicitLitrosOriginal").val(ds.values[0].qtdeLicitLitros);
					$("#qtdeLicitBaseSeca, #qtdeLicitBaseSecaOriginal").val(ds.values[0].qtdeLicitBaseSeca);
					$("#qtdeLicitM3, #qtdeLicitM3Original").val(ds.values[0].qtdeLicitM3);
					$("#qtdeTotalKg, #qtdeTotalKgOriginal").val(ds.values[0].qtdeTotalKg);
					$("#qtdeTotalTon, #qtdeTotalTonOriginal").val(ds.values[0].qtdeTotalTon);
					$("#qtdeTotalLitros, #qtdeTotalLitrosOriginal").val(ds.values[0].qtdeTotalLitros);
					$("#qtdeTotalBaseSeca, #qtdeTotalBaseSecaOriginal").val(ds.values[0].qtdeTotalBaseSeca);
					$("#qtdeTotalM3, #qtdeTotalM3Original").val(ds.values[0].qtdeTotalM3);
					$("#precoFinalKg, #precoFinalKgOriginal").val(ds.values[0].precoFinalKg);
					$("#precoFinalTon, #precoFinalTonOriginal").val(ds.values[0].precoFinalTon);
					$("#precoFinalLitros, #precoFinalLitrosOriginal").val(ds.values[0].precoFinalLitros);
					$("#precoFinalBaseSeca, #precoFinalBaseSecaOriginal").val(ds.values[0].precoFinalBaseSeca);
					$("#precoFinalM3, #precoFinalM3Original").val(ds.values[0].precoFinalM3);
					$("#condicaoPagamento, #condicaoPagamentoOriginal").val(ds.values[0].TXT_CondPg);
					$("#prazoEntrega, #prazoEntregaOriginal").val(ds.values[0].radio35);
					$("#especificarDias, #especificarDiasOriginal").val(ds.values[0].TXT_PrazoEntreg);
					$("#tipoFrete, #tipoFreteOriginal").val(ds.values[0].CMB_TipoFrete);
					$("#valorFrete, #valorFreteOriginal").val(ds.values[0].TXT_Valor);
					$("#seRedespacho, #seRedespachoOriginal").val(ds.values[0].PAR_SERED);
					$("#horarioRecebimento, #horarioRecebimentoOriginal").val(ds.values[0].TXT_HrReb);
					$("#mangote, #mangoteOriginal").val(ds.values[0].Rd_Mangote);
					$("#tamanho, #tamanhoOriginal").val(ds.values[0].TXT_MangMetros);
					$("#bomba, #bombaOriginal").val(ds.values[0].Rd_Bomba);
					$("#engate, #engateOriginal").val(ds.values[0].Rd_Engate);
					$("#especPolegadas, #especPolegadasOriginal").val(ds.values[0].TXT_Polegadas);
					$("#obsParaLogistica, #obsParaLogisticaOriginal").val(ds.values[0].PAR_ObsLogistic);
					$("#especificacaoProduto, #especificacaoProdutoOriginal").val(ds.values[0].TXT_EspProd);
					$("#envioLaudosEspecificos, #envioLaudosEspecificosOriginal").val(ds.values[0].TXT_LaudoEsp);
					$("#demandaEquip, #demandaEquipOriginal").val(ds.values[0].Rd_DemEquip);
					$("#especificarEquip, #especificarEquipOriginal").val(ds.values[0].TXT_EspEquip);
					$("#obsLicitacoes, #obsLicitacoesOriginal").val(ds.values[0].PAR_OBSAREALICT);
					$("#obsAtendimentoClientes, #obsAtendimentoClientesOriginal").val(ds.values[0].obsAtendimentoClientes);

					ds.values[0].sel_tipoEntrega0 ? $("#tipoEntrega1").prop("checked", true) : $("#tipoEntrega1").prop("checked", false);
					ds.values[0].sel_tipoEntrega1 ? $("#tipoEntrega2").prop("checked", true) : $("#tipoEntrega2").prop("checked", false);
					ds.values[0].sel_tipoEntrega2 ? $("#tipoEntrega3").prop("checked", true) : $("#tipoEntrega3").prop("checked", false);
					ds.values[0].sel_tipoEntrega3 ? $("#tipoEntrega4").prop("checked", true) : $("#tipoEntrega4").prop("checked", false);
					ds.values[0].sel_tipoEntrega4 ? $("#tipoEntrega5").prop("checked", true) : $("#tipoEntrega5").prop("checked", false);
					ds.values[0].sel_tipoEntrega5 ? $("#tipoEntrega6").prop("checked", true) : $("#tipoEntrega6").prop("checked", false);
					ds.values[0].sel_tipoEntrega6 ? $("#tipoEntrega7").prop("checked", true) : $("#tipoEntrega7").prop("checked", false);
					ds.values[0].sel_tipoEntrega7 ? $("#tipoEntrega8").prop("checked", true) : $("#tipoEntrega8").prop("checked", false);
					ds.values[0].sel_tipoEntrega8 ? $("#tipoEntrega9").prop("checked", true) : $("#tipoEntrega9").prop("checked", false);
					ds.values[0].sel_tipoEntrega9 ? $("#tipoEntrega10").prop("checked", true) : $("#tipoEntrega10").prop("checked", false);
					ds.values[0].sel_tipoEntrega10 ? $("#tipoEntrega11").prop("checked", true) : $("#tipoEntrega11").prop("checked", false);
					ds.values[0].sel_tipoEntrega11 ? $("#tipoEntrega12").prop("checked", true) : $("#tipoEntrega12").prop("checked", false);
					ds.values[0].sel_tipoEntrega12 ? $("#tipoEntrega13").prop("checked", true) : $("#tipoEntrega13").prop("checked", false);
					ds.values[0].sel_tipoEntrega13 ? $("#tipoEntrega14").prop("checked", true) : $("#tipoEntrega14").prop("checked", false);
					ds.values[0].sel_tipoEntrega14 ? $("#tipoEntrega15").prop("checked", true) : $("#tipoEntrega15").prop("checked", false);
					ds.values[0].sel_tipoEntrega15 ? $("#tipoEntrega16").prop("checked", true) : $("#tipoEntrega16").prop("checked", false);
					ds.values[0].sel_tipoEntrega16 ? $("#tipoEntrega17").prop("checked", true) : $("#tipoEntrega17").prop("checked", false);
					ds.values[0].sel_tipoEntrega17 ? $("#tipoEntrega18").prop("checked", true) : $("#tipoEntrega18").prop("checked", false);
					ds.values[0].sel_tipoEntrega18 ? $("#tipoEntrega19").prop("checked", true) : $("#tipoEntrega19").prop("checked", false);
					ds.values[0].sel_tipoEntrega19 ? $("#tipoEntrega20").prop("checked", true) : $("#tipoEntrega20").prop("checked", false);
					ds.values[0].checkbox41opc0 ? $("#optPaletizado").prop("checked", true) : $("#optPaletizado").prop("checked", false);
					ds.values[0].checkbox41opc1 ? $("#optFilmado").prop("checked", true) : $("#optFilmado").prop("checked", false);
					ds.values[0].checkbox41opc2 ? $("#optCargaBatida").prop("checked", true) : $("#optCargaBatida").prop("checked", false);
					ds.values[0].checkbox41opc3 ? $("#optDemandaAjudante").prop("checked", true) : $("#optDemandaAjudante").prop("checked", false);
					ds.values[0].checkbox41opc4 ? $("#optExigeLogReversa").prop("checked", true) : $("#optExigeLogReversa").prop("checked", false);
					ds.values[0].checkbox41opc5 ? $("#optDemandaContratEmpilh").prop("checked", true) : $("#optDemandaContratEmpilh").prop("checked", false);

					buscaHistorico(numprocess);
				} else {

					resetValues();
					FLUIGC.toast({
						title: 'AtenÃ§Ã£o!',
						message: 'Nenhum registro foi encontrado com o nÃºmero informado',
						type: 'warning'
					});

				}

			}

		} else {

			resetValues();

			FLUIGC.toast({
				title: 'AtenÃ§Ã£o!',
				message: 'JÃ¡ existe uma solicitaÃ§Ã£o ativa alterando esse nÃºmero de Fluig! <a target="_blank" href="https://bauminashom.fluig.com:9100/portal/p/01/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=' + dsVerifica.values[0]["workflowProcessPK.processInstanceId"] + '">SolicitaÃ§Ã£o ' + dsVerifica.values[0]["workflowProcessPK.processInstanceId"] + '</a>',
				type: 'danger'
			});

		}

	});
})

function verificarAlteracao(id, texto) {

	if ($('#' + id + 'Original').val() != texto) {

		$('#' + id).parent().addClass('has-warning');
		$('#' + id).addClass('corFundo');
		$('#' + id + 'Hidden').val('Mudou');

		var valorOriginal = $('#' + id + 'Original').val();
		if (valorOriginal == "" || valorOriginal == null) {
			valorOriginal = "(Vazio)";
		}

		$('#' + id).prop('title', "Valor anterior: " + valorOriginal);
		$('#' + id + 'ValSpan').html("Valor anterior: " + valorOriginal);


		if ($('#atividade').val() == "7") {

			var originVal = $('#' + id + 'Original').val();
			$('#' + id + 'ValSpan').html("Valor anterior: " + originVal);

		}
	} else {

		$('#' + id).parent().removeClass('has-warning');
		$('#' + id).removeClass('corFundo');
		$('#' + id + 'Hidden').val('');
		$('#' + id + 'ValSpan').html('');

		const element = document.getElementById(id);
		if (element != null) {
			element.title = "";
		}
	}
}
const carregarCalendar = () => {
	FLUIGC.calendar('#dvInicioContrato, #dvFimContrato', {
		pickDate: true,
		pickTime: false
	})
}

function carregarDivsRetorno() {
	var atividade = $("#atividade").val();

	if ($("#obs_enviarAtividadePara").val() != "") {
		$("#div_enviarAtivPara").show();
	}
	if ($("#obs_enviarAtividadeParaValida").val() != "") {
		$("#div_enviarAtivParaValida").show();
	}

	switch (atividade) {
		case "15":
			$("#div_enviarAtivPara").show();
			setTimeout(() => $("#obs_enviarAtividadePara").focus(), 500);
			break;
		case "37":
			$("#div_enviarAtivParaValida").show();
			setTimeout(() => $("#obs_enviarAtividadeParaValida").focus(), 500);
			break;
	}
}

const resetValues = () => {

	const fields = $("form[name='form']").find("input, select, textarea, input[type='checkbox']");

	for (let i = 0; i < fields.length; i++) {
		fields[i].value = ''
		fields[i].type === 'checkbox' ? fields[i].checked = false : null;
	};
}

const verifyCheckbox = () => {

	const arr = $("form[name='form']").find("input[type='checkbox']");
	for (let index = 0; index < arr.length; index++) {
		let id = '#' + arr[index].id + 'valOri';

		$(id).val(arr[index].checked.toString())

	}
}

const changeCheckbox = () => {

	let arr = $("form[name='form']").find("input[type='checkbox']");

	for (let index = 0; index < arr.length; index++) {

		let id = '#' + arr[index].id;
		let idOriginal = $('#' + arr[index].id + 'valOri').val()

		if (arr[index].checked.toString() != idOriginal) {

			$(id + 'Hidden').val('Mudou');
			$(id).parent().removeClass('custom-checkbox-primary').addClass('custom-checkbox-warning');
			$(id).siblings()[2].setAttribute('class', 'text-warning');

		} else {
			$(id + 'Hidden').val('');
			$(id).siblings()[2].classList.remove('text-warning');
			$(id).parent().removeClass('custom-checkbox-warning').addClass('custom-checkbox-primary');

		}
	}
}

function buscaHistorico(processId) {


	console.log(processId);

	var cn1 = DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST);
	var cn2 = DatasetFactory.createConstraint("numeroFluig", processId, processId, ConstraintType.MUST);
	var dsHist1 = DatasetFactory.getDataset("DSFormulariodeChecklist-Alteracao-VendasMercadoPublico", ["dataSolicitacao"], [cn1, cn2], null);

	if (dsHist1.values.length == 0) {

		var dsHistVal = "<span>Ainda nÃ£o existem solicitaÃ§Ãµes alterando esse nÃºmero de Fluig</span>";

	} else {
		// Primeira consulta para verificar a data da solicitaÃ§Ã£o de Vendas
		var numSolicOrigem = $("#numeroFluig").val();
		var solicitacao = $("#solicitacao").val();

		var cs1 = DatasetFactory.createConstraint("solicitacao", numSolicOrigem, numSolicOrigem, ConstraintType.MUST);
		var cs2 = DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST);
		var dsVendas = DatasetFactory.getDataset("ds_form_vendas_mercado_publico", ["dataSolicitacao"], [cs1, cs2], null);

		// Hitorico para solicitaÃ§Ãµes de alteraÃ§Ã£o
		if (dsVendas.values.length == 0) {

			var cs1 = DatasetFactory.createConstraint("solicitacao", processId, processId, ConstraintType.MUST);
			var cs2 = DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST);
			var vendasDs = DatasetFactory.getDataset("ds_form_vendas_mercado_publico", ["dataSolicitacao"], [cs1, cs2], null);

			var dsValues = new Array();
			const alteracaoNumFluig = DatasetFactory.getDataset("DSFormulariodeChecklist-Alteracao-VendasMercadoPublico",
				["solicitacao", "dataSolicitacao"],
				[
					DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST),
					DatasetFactory.createConstraint("numeroFluig", processId, processId, ConstraintType.MUST)
				],
				null);

			const alteracaoOldFluig = DatasetFactory.getDataset("DSFormulariodeChecklist-Alteracao-VendasMercadoPublico",
				["solicitacao", "dataSolicitacao"],
				[
					DatasetFactory.createConstraint("metadata#active", true, true, ConstraintType.MUST),
					DatasetFactory.createConstraint("oldFluig", processId, processId, ConstraintType.MUST)
				],
				null);

			for (let i = 0; i < alteracaoNumFluig.values.length; i++) dsValues.push(alteracaoNumFluig.values[i]);
			for (let i = 0; i < alteracaoOldFluig.values.length; i++) dsValues.push(alteracaoOldFluig.values[i]);

			var dsHistVal = "<span><u><b><a target='_blank' href='https://bauminashom.fluig.com:9100/portal/p/01/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=" + processId + "'>SolicitaÃ§Ã£o principal " + processId + "</a></b> feita em " + vendasDs.values[0]["dataSolicitacao"] + "</u></span><br>";

			for (var i = 0; i < dsValues.length; i++) {

				var co1 = DatasetFactory.createConstraint("processId", "AC_0008", "AC_0008", ConstraintType.MUST);
				var co2 = DatasetFactory.createConstraint("cardDocumentId", dsValues[i]["metadata#id"], dsValues[i]["metadata#id"], ConstraintType.MUST);
				var dataset = DatasetFactory.getDataset("workflowProcess", ["workflowProcessPK.processInstanceId", "cardDocumentId"], [co1, co2], null);

				var numSolici = dataset.values[0]["workflowProcessPK.processInstanceId"];
				var dataSolic = dsValues[i]["dataSolicitacao"];

				console.log(dataset);

				if (solicitacao != numSolici) {

					dsHistVal += "<span><b><a target='_blank' href='https://bauminashom.fluig.com:9100/portal/p/01/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=" + numSolici + "'>SolicitaÃ§Ã£o " + numSolici + "</a></b> feita em " + dataSolic + "</span><br>";

					if (getformMode() == "VIEW") {

						$('#conteudoHistorico').html("<span><b><a target='_blank' href='https://bauminashom.fluig.com:9100/portal/p/01/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=" + numSolici + "'>SolicitaÃ§Ã£o " + numSolici + "</a></b> feita em " + dataSolic + "</span><br>");
					}
				}
			}

		} else {

			var dsHistVal = "<span><u><b><a target='_blank' href='https://bauminashom.fluig.com:9100/portal/p/01/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=" + numSolicOrigem + "'>SolicitaÃ§Ã£o principal " + numSolicOrigem + "</a></b> feita em " + dsVendas.values[0]["dataSolicitacao"] + "</u></span><br>";

			for (var i = 0; i < (dsHist1.values.length); i++) {

				var co1 = DatasetFactory.createConstraint("processId", "AC_0008", "AC_0008", ConstraintType.MUST);
				var co2 = DatasetFactory.createConstraint("cardDocumentId", dsHist1.values[i]["metadata#id"], dsHist1.values[i]["metadata#id"], ConstraintType.MUST);
				var dsHist2 = DatasetFactory.getDataset("workflowProcess", ["workflowProcessPK.processInstanceId", "cardDocumentId"], [co1, co2], null);

				var numSolici = dsHist2.values[0]["workflowProcessPK.processInstanceId"];
				var dataSolic = dsHist1.values[i]["dataSolicitacao"];

				if (solicitacao != numSolici) {

					dsHistVal += "<span><b><a target='_blank' href='https://bauminashom.fluig.com:9100/portal/p/01/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=" + numSolici + "'>SolicitaÃ§Ã£o " + numSolici + "</a></b> feita em " + dataSolic + "</span><br>";

					if (getformMode() == "VIEW") {

						$('#conteudoHistorico').html("<span><b><a target='_blank' href='https://bauminashom.fluig.com:9100/portal/p/01/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=" + numSolici + "'>SolicitaÃ§Ã£o " + numSolici + "</a></b> feita em " + dataSolic + "</span><br>");
					}

				}
			}
		}
	}

	$("#conteudoHistorico").html(dsHistVal);

}